開発の一区切りとして整形,自動テストを実行します。
全体の工程を示します。

1. コード整形
2. 自動テスト実行
3. 助言

対象は作業を行ったファイルのみとすること。Git管理下であれば`git status`も参照のこと。
早くフィードバックを返すことを優先し、余計なこと（全体テスト等）をしないこと（必要であれば助言として伝えること）。

## 1. コード整形

`mix format`を対象ファイルに実施する。

## 2. 自動テスト実行

`MIX_ENV=test mix test`を実施する。
ただし`mix`コマンドを都度起動すると時間がかかるため、下記のファイル一覧を出した後に、まとめて実施する。

(a)対象テストファイル
(b)対象コードに関連するであろうテストファイル（存在する場合）

## 3. 助言

最高位のレビュアーとして、作業者の成長を促すことを目的とする。
自動テスト結果に対するフィードバック、あるいは、対象ファイルのロジックや記述に対して助言を行うこと。
優先度をつけて簡潔に列挙すること。

## 出力フォーマット

```
## コード整形結果 ----------

- {自動整形したファイル名}

## 自動テスト実行結果 ----------

- {採番} {失敗したテストのファイル名:行番号の一覧}
  - {簡潔なエラー内容}

## 助言 ----------

**自動テスト**

{対応する自動テスト実行結果採番}:
{簡潔な修正方針}

**課題 必須(MUST)**

{採番} {見出し}:
{内容}

**課題 すべき(SHOULD)**

{採番} {見出し}:
{内容}

**課題 一流の考え(THINK)**

{採番} {見出し}:
{内容}

**リファクタリング**

{採番} {見出し}:
{内容}
```

